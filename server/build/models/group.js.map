{"version":3,"sources":["../../server/models/group.js"],"names":["sequelize","DataTypes","Group","define","title","type","STRING","allowNull","associate","models","hasMany","Message","as","belongsToMany","User","through"],"mappings":";;;;;;kBAAe,UAACA,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,QAAQF,UAAUG,MAAV,CAAiB,OAAjB,EAA0B;AACtCC,WAAO;AACLC,YAAMJ,UAAUK,MADX;AAELC,iBAAW;AAFN;AAD+B,GAA1B,CAAd;AAMAL,QAAMM,SAAN,GAAkB,UAACC,MAAD,EAAY;AAC5B;AACAP,UAAMQ,OAAN,CAAcD,OAAOE,OAArB,EAA8B;AAC5BC,UAAI;AADwB,KAA9B;AAGAV,UAAMW,aAAN,CAAoBJ,OAAOK,IAA3B,EAAiC;AAC/BC,eAAS,WADsB;AAE/BH,UAAI;AAF2B,KAAjC;AAID,GATD;AAUA,SAAOV,KAAP;AACD,C","file":"group.js","sourcesContent":["export default (sequelize, DataTypes) => {\n  const Group = sequelize.define('Group', {\n    title: {\n      type: DataTypes.STRING,\n      allowNull: false\n    }\n  });\n  Group.associate = (models) => {\n    // associations can be defined here\n    Group.hasMany(models.Message, {\n      as: 'groupMessages',\n    });\n    Group.belongsToMany(models.User, {\n      through: 'userGroup',\n      as: 'groupUsers',\n    });\n  };\n  return Group;\n};\n"]}